security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_register:
            pattern: ^/api/security/(register|confirm-register|recovery-request|verify-recovery-key|recovery|reset-password)
            anonymous: true

        api_agreement:
            pattern: ^/api/user-agreement
            anonymous: true

        api_login:
            pattern:  ^/api/security/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/security/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure


        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/security/(register|confirm-register), role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/recovery-request, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/verify-recovery-key, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/recovery, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/user-agreement, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/client, roles: ROLE_CLIENT_USER }
        - { path: ^/api/admin, roles: ROLE_ADMIN_USER }
        - { path: ^/api/company-representative, roles: ROLE_COMPANY_REPRESENTATIVE_USER }
        - { path: ^/api/analyst, roles: ROLE_ANALYST_USER }
